<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="cn.jiguang.demo">

    <!-- Required -->
    <permission
        android:name="${applicationId}.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />
    <!-- Required -->
    <uses-permission android:name="${applicationId}.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    <!--华为角标-->
    <uses-permission
        android:name="com.huawei.android.launcher.permission.CHANGE_BADGE"/>
    <!--vivo 角标-->
    <uses-permission android:name="com.vivo.notification.permission.BADGE_ICON" />
    <!--honor 角标-->
    <uses-permission android:name="com.hihonor.android.launcher.permission.CHANGE_BADGE" />
    <!--小米 推送必须-->
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- Optional. Required for location feature -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"/>
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!--xiaomi_permission_start-->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <!--xiaomi_permission_end-->
    <!--oppo_permission_start-->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <!--oppo_permission_end-->
    <!--honor_permission_start-->
    <queries>
        <intent>
            <action android:name="com.hihonor.push.action.BIND_PUSH_SERVICE" />
        </intent>
    </queries>
    <!--honor_permission_end-->



    <uses-sdk tools:overrideLibrary="
     cn.jpush.android.thirdpush.fcm
    ,cn.jpush.android.thirdpush.huawei
    ,cn.jpush.android.thirdpush.meizu
    ,cn.jpush.android.thirdpush.oppo
    ,cn.jpush.android.thirdpush.vivo
    ,cn.jpush.android.thirdpush.xiaomi
    ,com.google.firebase.firebase_core
    ,com.google.firebase.messaging
    ,com.google.firebase.analytics.connector.impl
    ,com.google.firebase.measurement
    ,com.google.android.gms.measurement.api
    ,com.google.firebase.measurement_impl
    ,com.google.firebase.iid
    ,com.google.firebase
    ,com.google.firebase.iid.internal
    ,com.google.android.gms.base
    ,com.google.android.gms.tasks
    ,com.google.firebase.analytics.connector
    ,com.google.android.gms.stats
    ,com.google.android.gms.ads_identifier
    ,com.google.android.gms.common
    ,com.google.android.gms.measurement_base
    ,com.huawei.android.hms.openid
    ,com.huawei.agconnect.core
    ,com.huawei.hmf.tasks
    ,com.huawei.hms.framework.network.grs
    ,com.huawei.hms.framework.common
    ,com.huawei.android.hms.base
    ,com.huawei.android.hms.push
    ,android.support.mediacompat
    ,android.support.fragment
    ,android.support.coreutils
    ,android.support.coreui
    ,android.support.compat
    ,android.arch.lifecycle" />


    <!-- for androidR targetSdkVersion >=30 -->
    <!--    <queries>-->
    <!--        <intent>-->
    <!--            <action android:name="cn.jpush.android.intent.PushService" />-->
    <!--        </intent>-->
    <!--    </queries>-->

    <application
        android:name=".App"
        android:allowBackup="true"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:requestLegacyExternalStorage="true"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true"
        tools:ignore="GoogleAppIndexingWarning"
        tools:replace="android:label">
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <activity
            android:name=".MainActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme"
            android:exported="false"
        >
        </activity>
        <activity
            android:name=".PrivacyActivity"
            android:theme="@style/AppTheme"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


        <!-- For test only 测试高级功能 -->
        <activity
            android:name=".jpush.AdvActivity"
            android:configChanges="orientation|keyboardHidden" android:screenOrientation="portrait"
            android:exported="false"/>

        <!-- For test only 测试状态通知栏，需要打开的Activity -->
        <activity android:name=".jpush.TestActivity" android:exported="false">
            <intent-filter>
                <action android:name="jpush.testAction" />
                <category android:name="jpush.testCategory" />
            </intent-filter>
        </activity>

        <!-- User defined.  For test only  用户自定义接收消息器,3.0.7开始支持,目前新tag/alias接口设置结果会在该广播接收器对应的方法中回调-->
        <!--since 5.2.0 接收JPush相关事件-->
        <receiver android:name=".jpush.PushMessageReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.RECEIVER_MESSAGE" />
                <category android:name="${applicationId}"></category>
            </intent-filter>
        </receiver>
        <!-- 点击通知时，要打开的 activity -->
        <activity
            android:name=".jpush.OpenClickActivity"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <action android:name="cn.jiguang.demo.jpush.OpenClickActivity" />
            </intent-filter>
        </activity>
        <!-- since 3.3.0 Required SDK 核心功能-->
        <!-- 可配置android:process参数将PushService放在其他进程中 -->
        <!--User defined.  For test only 继承自cn.jpush.android.service.JCommonService-->
        <service
            android:name=".jpush.PushService"
            android:process=":pushcore"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jiguang.user.service.action" />
            </intent-filter>
        </service>


        <!-- Rich push 核心功能 since 2.0.6 -->
        <activity
            android:name="cn.jpush.android.ui.PopWinActivity"
            android:exported="true"
            android:theme="@style/JPushDialogStyle">
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />

                <action android:name="cn.jpush.android.ui.PopWinActivity" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>

        <!-- Required SDK核心功能 -->
        <activity
            android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="true"
            android:theme="@android:style/Theme.NoTitleBar">
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>

        <!-- since 3.5.0 Required SDK 核心功能 -->
        <!-- 3.5.0新增，用于定时展示功能 -->
        <receiver
            android:name="cn.jpush.android.service.SchedulerReceiver"
            android:exported="false" />

        <!-- since 3.0.9 Required SDK 核心功能 -->
        <provider
            android:name="cn.jpush.android.service.DataProvider"
            android:authorities="${applicationId}.DataProvider"
            android:exported="false"
            android:process=":pushcore" />

        <!-- since 3.3.0 Required SDK核心功能 -->
        <activity
            android:name="cn.jpush.android.service.JNotifyActivity"
            android:exported="true"
            android:taskAffinity=""
            android:theme="@style/JPushTheme" >
            <intent-filter>
                <action android:name="cn.jpush.android.intent.JNotifyActivity" />
                <category android:name="android.intent.category.DEFAULT" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>
        <!-- since 4.6.0 Required SDK核心功能 -->
        <activity
            android:name="cn.android.service.JTransitActivity"
            android:exported="true"
            android:taskAffinity=""
            android:theme="@style/JPushTheme" >
            <intent-filter>
                <action android:name="cn.android.service.JTransitActivity" />
                <category android:name="android.intent.category.DEFAULT"/>

                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>
        <!-- since 3.5.6 新增华硕通道 -->
        <receiver android:name="cn.jpush.android.asus.AsusPushMessageReceiver" android:exported="false"/>

        <!-- Required SDK 核心功能 -->
        <!-- 可配置android:process参数将PushService放在其他进程中 -->
        <service
            android:name="cn.jpush.android.service.PushService"
            android:enabled="true"
            android:exported="false"
            android:process=":pushcore">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>

        <!-- Required SDK核心功能 -->
        <receiver
            android:name="cn.jpush.android.service.PushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" /> <!-- Required  显示通知栏 -->
                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>

        <!-- Required SDK核心功能 -->
        <receiver
            android:name="cn.jpush.android.service.AlarmReceiver"
            android:exported="false" />


        <!--xiaomi_config_start-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushcore" />
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushcore" />
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />

        <receiver
            android:name="cn.jpush.android.service.PluginXiaomiPlatformsReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <activity
            android:name="com.xiaomi.mipush.sdk.NotificationClickedActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleInstance"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
            <meta-data
                android:name="supportStyle"
                android:value="scene|voip" />
        </activity>
        <meta-data
            android:name="XIAOMI_APPKEY"
            android:value="${XIAOMI_APPKEY}\" />
        <meta-data
            android:name="XIAOMI_APPID"
            android:value="${XIAOMI_APPID}\" />
        <!--xiaomi_config_end-->

        <!--huawei_config_start-->
        <service
            android:name="cn.jpush.android.service.PluginHuaweiPlatformsService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!--huawei_config_end-->

        <!--meizu_config_start-->
        <receiver android:name="cn.jpush.android.service.PluginMeizuPlatformsReceiver"
            android:permission="com.meizu.flyme.permission.PUSH"
            android:exported="true">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收 register 消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收 unregister 消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本 Flyme3 推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="MEIZU_APPKEY"
            android:value="${MEIZU_APPKEY}" />
        <meta-data
            android:name="MEIZU_APPID"
            android:value="${MEIZU_APPID}" />
        <!--meizu_config_end-->

        <!--fcm_config_start-->
        <service android:name="cn.jpush.android.service.PluginFCMMessagingService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!--fcm_config_end-->

        <!--oppo_config_start-->
        <service
            android:name="cn.jpush.android.service.PluginOppoPushService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE"
            android:exported="true">

            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <!-- since JPushv3.6.8 ，oppov2.1.0 oppo 核心功能-->
        <service
            android:name="com.heytap.msp.push.service.DataMessageCallbackService"
            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE"
            android:exported="true">

            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />

                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service> <!--兼容Q版本-->
        <meta-data
            android:name="OPPO_APPKEY"
            android:value="${OPPO_APPKEY}" />
        <meta-data
            android:name="OPPO_APPID"
            android:value="${OPPO_APPID}" />
        <meta-data
            android:name="OPPO_APPSECRET"
            android:value="${OPPO_APPSECRET}" />
        <!--oppo_config_end-->

        <!--vivo_config_start-->
        <receiver android:name="cn.jpush.android.service.PluginVivoMessageReceiver"
            android:exported="false"
            android:permission="${applicationId}.permission.JPUSH_MESSAGE">

            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>
        <service
            tools:node="replace"
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:permission="com.push.permission.UPSTAGESERVICE"
            android:exported="true" />
        <meta-data
            android:name="local_iv"
            android:value="MzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDEsMzIsMzgsMzcsMzYsMzUsMzQsMzMsI0AzNCwzMiwzMywzNywzMywzNCwzMiwzMywzMywzMywzNCw0MSwzNSwzNSwzMiwzMiwjQDMzLDM0LDM1LDM2LDM3LDM4LDM5LDQwLDQxLDMyLDM4LDM3LDMzLDM1LDM0LDMzLCNAMzQsMzIsMzMsMzcsMzMsMzQsMzIsMzMsMzMsMzMsMzQsNDEsMzUsMzIsMzIsMzI" /> <!-- 支持性能监控 -->

        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="${VIVO_APPKEY}" />
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="${VIVO_APPID}" />
        <!--vivo_config_end-->
        <!--honor_config_start-->
        <service
            android:name="cn.jpush.android.service.JHonorService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.hihonor.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <meta-data
            android:name="com.hihonor.push.app_id"
            android:value="${HONOR_APPID}" />
        <!--honor_config_end-->
        <!--nio_config_start-->
        <meta-data
            android:name="nio_push_app_id"
            android:value="${NIO_APPID}" />
        <!--nio_config_end-->


        <!--Required_config-->
        <meta-data
            android:name="JPUSH_CHANNEL"
            android:value="${JPUSH_CHANNEL}" />
        <meta-data
            android:name="JPUSH_APPKEY"
            android:value="${JPUSH_APPKEY}" /> <!-- </>值来自开发者平台取得的AppKey -->
        <provider
            android:name="cn.jpush.android.service.InitProvider"
            android:authorities="${applicationId}.jiguang.InitProvider"
            android:exported="false"
            android:readPermission="${applicationId}.permission.JPUSH_MESSAGE"
            android:writePermission="${applicationId}.permission.JPUSH_MESSAGE" />

    </application>

</manifest>
